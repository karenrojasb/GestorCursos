"use client";

import { useState } from "react";
import { ReactNode } from "react";

interface LayoutProps {
  children: ReactNode;
}

export default function RootLayout({ children }: LayoutProps) {
  const [id_emp, setIdEmp] = useState("");
  const [error, setError] = useState("");
  const [loading, setLoading] = useState(false);
  const [isAuthenticated, setIsAuthenticated] = useState(false); // Para verificar si el usuario inició sesión

  const handleLogin = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError("");

    try {
      const response = await fetch("http://localhost:8090/api/usuarios/login", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id_emp }),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.message || "Error en la autenticación");
      }

      console.log("Usuario autenticado:", data);
      setIsAuthenticated(true); // Marcar como autenticado
    } catch (error: any) {
      setError(error.message);
    } finally {
      setLoading(false);
    }
  };

  // Si el usuario NO ha iniciado sesión, mostrar el formulario de login
  if (!isAuthenticated) {
    return (
      <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100">
        <form onSubmit={handleLogin} className="bg-white p-6 rounded shadow-md">
          <h2 className="text-xl font-bold mb-4">Iniciar Sesión</h2>
          <input
            type="text"
            value={id_emp}
            onChange={(e) => setIdEmp(e.target.value)}
            placeholder="Ingrese su ID"
            className="border p-2 rounded w-full mb-4"
          />
          <button
            type="submit"
            className="bg-blue-600 text-white p-2 rounded w-full"
            disabled={loading}
          >
            {loading ? "Verificando..." : "Ingresar"}
          </button>
          {error && <p className="text-red-600 mt-2">{error}</p>}
        </form>
      </div>
    );
  }

  // Si el usuario YA inició sesión, mostrar la página normal
  return (
    <html lang="es">
      <body>
        <header className="w-full flex items-center justify-between px-6 py-4">
          <img
            src="/img/ecijg126.png"
            alt="Logo"
            className="h-20 transition-all duration-300 ease-in-out transform hover:scale-110 active:scale-95"
          />
          <div className="flex flex-col items-center space-x-1 ml-auto">
            <span className="text-xl text-gray-700 font-medium">NOMBRE USUARIO</span>
            <button
              className="flex items-center space-x-2 border border-[#990000] px-2 py-2 rounded hover:bg-[#990000] hover:text-white transition"
              onClick={() => setIsAuthenticated(false)} // Cerrar sesión
            >
              Cerrar sesión
            </button>
          </div>
        </header>
        <main>{children}</main>
      </body>
    </html>
  );
}