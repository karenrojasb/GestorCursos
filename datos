async getCoursesTeacher(idProfesor: number) {
  return this.prisma.$queryRawUnsafe<
    Array<{
      id: number;
      idCur: number;
      NombreCurso: string;
      Valor: number | null;
      Horas: number | null;
      Lugar: string;
      Inicio: Date;
      Fin: Date;
      LunesIni: string | null;
      LunesFin: string | null;
      MartesIni: string | null;
      MartesFin: string | null;
      MiercolesIni: string | null;
      MiercolesFin: string | null;
      JuevesIni: string | null;
      JuevesFin: string | null;
      ViernesIni: string | null;
      ViernesFin: string | null;
      SabadoIni: string | null;
      SabadoFin: string | null;
      DomingoIni: string | null;
      DomingoFin: string | null;
      Linea: string | null;
      Estado: string | null;
      Modalidad: string | null;
      Unidad: string | null;
      Profesor: number;
      SegundoPro: number;
      Proexterno: string | null;
      Descripcion: string | null;
      IdTipoCurso: number;
      TipoCurso: string | null;
      docInscr: string;
      nombre: string | null;
      fecreg: Date;
      rol: string;
      CupoMax: number | null;
      Nota: number | null;
      Especificacion: string | null;
      InscritoNumerico: number | null;
    }>
  >(
    `SELECT 
      i.id,
      i.idCur,
      c.NombreCurso,
      c.Valor,
      c.Horas,
      c.Lugar,
      c.Inicio,
      c.Fin,
      c.LunesIni,
      c.LunesFin,
      c.MartesIni,
      c.MartesFin,
      c.MiercolesIni,
      c.MiercolesFin,
      c.JuevesIni,
      c.JuevesFin,
      c.ViernesIni,
      c.ViernesFin,
      c.SabadoIni,
      c.SabadoFin,
      c.DomingoIni,
      c.DomingoFin,
      l.Especificacion AS Linea,
      est.Especificacion AS Estado,
      m.Especificacion AS Modalidad,
      u.nombre AS Unidad,
      c.Profesor,
      c.SegundoPro,
      c.Proexterno,
      c.Descripcion,
      c.IdTipoCurso,
      tc.Especificacion AS TipoCurso,
      i.docInscr,
      e.nombre,
      i.fecreg,
      c.CupoMax,
      TRY_CAST(i.docInscr AS BIGINT) AS InscritoNumerico,
      n.Nota,
      li.Especificacion,
      CASE 
        WHEN c.Profesor = ${idProfesor} THEN 'Titular'
        WHEN c.SegundoPro = ${idProfesor} THEN 'Segundo'
        ELSE 'Otro'
      END AS rol
    FROM gescur.Cursos c
    LEFT JOIN gescur.Inscripciones i ON i.idCur = c.id AND i.est = 1
    LEFT JOIN gescur.emp_nomina e ON i.docInscr = e.id_emp
    LEFT JOIN gescur.listas l ON l.id = c.Linea AND l.Tipo = 2
    LEFT JOIN gescur.listas est ON est.id = c.Estado AND est.Tipo = 4
    LEFT JOIN gescur.listas m ON m.id = c.Modalidad AND m.Tipo = 3
    LEFT JOIN gescur.unidad u ON c.Unidad = u.codigo
    LEFT JOIN gescur.listas tc ON tc.id = c.IdTipoCurso AND tc.Tipo = 8
    OUTER APPLY (
      SELECT TOP 1 n.Nota 
      FROM gescur.Notas n 
      WHERE n.idInscrito = TRY_CAST(i.docInscr AS BIGINT)
      ORDER BY n.id ASC
    ) n
    LEFT JOIN gescur.Listas li ON li.id = n.Nota
    WHERE (c.Profesor = ${idProfesor} OR c.SegundoPro = ${idProfesor})`
  );
}