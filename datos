'use client';

import { useState } from "react";
import CatalogoModal from "./catalogomodal";
import { BookOpenIcon, DocumentCheckIcon, PencilIcon } from "@heroicons/react/24/solid";
import { XMarkIcon } from "@heroicons/react/24/solid";
import { ChartBarIcon, PencilSquareIcon } from "@heroicons/react/16/solid";
import { motion } from "framer-motion";
import CatalogoAdminModal from "./catalogoadminmodal";
import CursoModal from "./CursoModal"
import { useRouter } from "next/navigation";




export default function MainButtons({ onSelect, esAdmin}: {onSelect : (section: string) => void; esAdmin: boolean }) {
    const [showCatalogo, setShowCatalogo, ] = useState (false);
    const [showGestorModal, setShowGestorModal] = useState (false);
    const [showCatalogoAdmin , setShowCatalogoAdmin ] = useState (false);
    const [showCursoModal, setShowCursoModal] = useState(false);

    const router = useRouter;
    
   const handleSaveCurso = async (data: any) => {
    console.log("Enviando datos:", data);

    try {
        const response = await fetch("http://localhost:8090/api/cursos", {
            method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify(data),
        });
        if (!response.ok) {
            throw new Error ("Error al guardar el curso");
        }

        alert("Curso guardado con éxito");
        setShowCursoModal(false);
    } catch (error) {
        console.error ("Error:", error);
        alert("Hubo un error al guardar el curso")
    }  
   };

    return (
        <div className="flex flex-col space-y-4 w-full max-w-md">
             
             {/*BOTÓN CATÁLOGO */}
            <button 
            onClick={() => setShowCatalogo(true)}
            className="flex items-center justify-center gap-3 w-full bg-[#990000] 
                       text-white py-3 rounded-lg shadow-md transition-all duration-300 hover:scale-105 hover:shadow-lg">
                        <BookOpenIcon className="h-6 w-6 text-white"/>
                        Catálogo
                       </button>
                       {showCatalogo && <CatalogoModal onClose={() => setShowCatalogo(false)}></CatalogoModal>}
            {/*BOTÓN DE CERTIFICADOS */}
            <button 
            onClick={() => onSelect("/catalogomodal")}
            className="flex items-center justify-center gap-3 w-full bg-[#990000] 
                       text-white py-3 rounded-lg shadow-md transition-all duration-300 hover:scale-105 hover:shadow-lg">
                        <DocumentCheckIcon className="h-6 w-6 text-white"/>
                        Certificados
                       </button>

            {/*BOTÓN SOLO PARA ADMINISTRADORES GESTOR DE CURSOS*/}
                       {esAdmin && (
                        <>
                        <button 
            onClick={() => setShowGestorModal(true)}
            className="flex items-center justify-center gap-3 w-full bg-[#990000] 
                       text-white py-3 rounded-lg shadow-md transition-all duration-300 hover:scale-105 hover:shadow-lg">
                        <PencilIcon className="h-6 w-6 text-white"/>
                        Gestor de Cursos
                       </button>
                       
                       {showGestorModal && (
                        <div className="p-6 rounded-ig shadow-lg fixed inset-0 flex items-center  justify-center bg-black bg-opacity-50 z-50">
                            <div className="relative flex items-center justify-center gap-3 w-full max-w-3xl bg-white 
                       text-white py-3 rounded-lg shadow-md transition-all duration-300 hover:scale-105 hover:shadow-lg">
                            
                                {/*BOTÓN DE CERRAR LA VENTANA X */}
                                <button onClick={() => {
                                    setShowGestorModal(false);
                                                                  }}
                                    className="absolute top-2 right-2 text-gray-500 hover:text-[#990000] transition-transform duration-300 transform hover:rotate-90 hover:scale-110">
                                        <XMarkIcon className="h-6 w-6  transition-transform rotate-180" />                                  
                                        </button>
                                
                                {/*TITULO */}
                                <h2 className="text-4xl font-extrabold text-[#990000] text-center"> 
                                Gestor de Cursos
             
                                </h2>
                                
                                <div className="w-full flex flex-col items-center justify-center space-y-3 text-center">
                                 
                                        <motion.button
                                        whileHover={{ scale: 1.1, backgroundColor: "#b30000"}}
                                        whileTap={{ scale: 0.95}}
                                        onClick={() => setShowCursoModal(true)}
                                    className="flex items-center gap-3 w-4/5 bg-[#990000] text-white py-3 rounded-lg transition-all duration-300 hover:shadow-lg justify-center">
                                        <PencilSquareIcon className="h-6 w-6 text-white"/>
                                        Crear Curso
                                        </motion.button>


                                        <motion.button
                                        whileHover={{ scale: 1.1, backgroundColor: "#b30000"}}
                                        whileTap={{ scale: 0.95}}
                                        onClick={() => setShowCatalogoAdmin(true)}
                                    className="flex items-center gap-3 w-4/5 bg-[#990000] text-white py-3 rounded-lg transition-all duration-300 hover:shadow-lg justify-center">
                                        <BookOpenIcon className="h-6 w-6 text-white"/>
                                        Catálogo
                                        </motion.button>

                                        

                                        <motion.button
                                        whileHover={{ scale: 1.1, backgroundColor: "#b30000"}}
                                        whileTap={{ scale: 0.95}}
                                        onClick={() => onSelect("gestor-crear-editar")}
                                    className="flex items-center gap-3 w-4/5 bg-[#990000] text-white py-3 rounded-lg transition-all duration-300 hover:shadow-lg justify-center">
                                        <ChartBarIcon className="h-6 w-6 text-white"/>
                                        Reportes
                                        </motion.button>
                               
                                        </div>
                      </div>
                       
                        </div>
                        
                       )}              
                                      
                                      {showCatalogoAdmin && <CatalogoAdminModal onClose={() => setShowCatalogoAdmin(false)} />}
                                      {showCursoModal && <CursoModal onClose={() => setShowCursoModal(false)} onSave={handleSaveCurso} />}
                                 

                                

                       </>
                       )}
                       
        </div>
    );
}
