const fetchCursos = async () => {
  setIsLoading(true);
  try {
    const responseCursos = await fetch(`http://localhost:8090/api/cursos`);
    const responseInscripciones = await fetch(`http://localhost:8090/api/inscripciones`);

    if (!responseCursos.ok || !responseInscripciones.ok) {
      throw new Error(`Error HTTP al obtener cursos o inscripciones`);
    }

    const dataCursos: Curso[] = await responseCursos.json();
    const dataInscripciones: Inscripcion[] = await responseInscripciones.json();

    // Filtrar cursos con inscripciones activas (est = true)
    const cursosConInscritosActivos = dataCursos.filter(curso =>
      dataInscripciones.some(insc => insc.idCur === curso.id && insc.est === true)
    );

    // Filtrar por profesor si aplica
    const cursosFiltradosPorProfesor = idEmp !== null
      ? cursosConInscritosActivos.filter(curso => curso.Profesor === idEmp || Number(curso.SegundoPro) === idEmp)
      : cursosConInscritosActivos;

    setCursos(cursosFiltradosPorProfesor);
    setCursosFiltrados(cursosFiltradosPorProfesor);
  } catch (error) {
    console.error("Error al obtener los cursos o inscripciones:", error);
  }
  setIsLoading(false);
};