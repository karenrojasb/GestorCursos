
import { Injectable } from '@nestjs/common';
import { PrismaService } from 'src/prisma/prisma.service';

@Injectable()
export class InscripcionService {
  constructor(private prisma: PrismaService) {}

  async getInscripciones() {
    return this.prisma.inscripciones.findMany({
      include: {
        Cursos: { select: { NombreCurso: true } }, // Se incluye el nombre del curso asociado
      },
    });
  }

  async inscribirUsuario(docInscr: string, idCur: number) {
    // Verificar si el usuario ya est치 inscrito en el curso
    const existe = await this.prisma.$queryRaw<any[]>`
      SELECT 1 FROM gescur.inscripciones WHERE docInscr = ${docInscr} AND idCur = ${idCur}`;

    if (existe.length > 0) {
      return { mensaje: "El usuario ya est치 inscrito en este curso" };
    }

    // Insertar la inscripci칩n en la base de datos
    await this.prisma.$executeRaw`
      INSERT INTO gescur.inscripciones (docInscr, idCur)
      VALUES (${docInscr}, ${idCur})`;

    return { mensaje: "Inscripci칩n exitosa" };
  }
}
