import { Controller, Post, Body } from '@nestjs/common';
import { InscripcionService } from './inscripcion.service';

@Controller('inscripcion')
export class InscripcionController {
  constructor(private readonly inscripcionService: InscripcionService) {}

  @Post()
  async inscribir(@Body() body: { id_emp: string, id_curso: number }) {
    return this.inscripcionService.inscribirUsuario(body.id_emp, body.id_curso);
  }
}



import { Injectable } from '@nestjs/common';
import { PrismaService } from 'src/prisma/prisma.service';

@Injectable()
export class InscripcionService {
  constructor(private prisma: PrismaService) {}

  async inscribirUsuario(id_emp: string, id_curso: number) {
    // Verificar si ya est치 inscrito
    const existente = await this.prisma.$queryRaw<any[]>`
      SELECT * FROM gescur.inscripciones 
      WHERE id_emp = ${id_emp} AND id_curso = ${id_curso}`;

    if (existente.length > 0) {
      return { mensaje: "Ya est치s inscrito en este curso" };
    }

    // Insertar la inscripci칩n
    await this.prisma.$executeRaw`
      INSERT INTO gescur.inscripciones (id_emp, id_curso)
      VALUES (${id_emp}, ${id_curso})`;

    return { mensaje: "Inscripci칩n exitosa" };
  }
}