 useEffect(() => {
  const fetchDatos = async () => {
    try {
      const respOpciones = await fetch("http://localhost:8090/api/listas/Especificaciones");
      if (!respOpciones.ok) throw new Error("Error al obtener lista de notas");
      const dataOpciones = await respOpciones.json();
      setOpciones(dataOpciones);

      const respNota = await fetch(`http://localhost:8090/api/notas/curso-inscrito?idCurso=${idCur}&idInscrito=${documento}`);
      if (respNota.ok) {
        const dataNota = await respNota.json();
        if (dataNota && dataNota.Nota !== undefined) {
          setNotaSeleccionada(Number(dataNota.Nota));
          setNotaExistenteId(dataNota.id);
          console.log("Nota cargada:", dataNota.Nota);
        }
      }
    } catch (error) {
      console.error("Error cargando datos:", error);
    }
  };

  if (idCur && documento) {
    fetchDatos();
  }
}, [idCur, documento]);




const handleGuardar = async () => {
  if (notaSeleccionada === null || isNaN(notaSeleccionada)) {
    alert("Por favor selecciona una nota vÃ¡lida");
    return;
  }

  if (!idEmp) {
    alert("Error: ID de empleado no encontrado.");
    return;
  }

  setGuardando(true);

  try {
    const url = notaExistenteId
      ? `http://localhost:8090/api/notas/${notaExistenteId}` // PUT
      : "http://localhost:8090/api/notas"; // POST

    const method = notaExistenteId ? "PUT" : "POST";

    const response = await fetch(url, {
      method,
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        idCurso: idCur,
        idInscrito: documento,
        idRegistro: idEmp,
        Nota: notaSeleccionada,
        FechaRegistro: new Date(),
      }),
    });

    if (!response.ok) {
      throw new Error(`Error al ${notaExistenteId ? "actualizar" : "crear"} la nota.`);
    }

    onGuardar(String(notaSeleccionada));
    onClose();
  } catch (error) {
    console.error("Error al guardar nota:", error);
    alert("Hubo un error al guardar la nota.");
  } finally {
    setGuardando(false);
  }
};

 const especificacionNota = opciones.find(op => op.id === notaSeleccionada)?.Especificacion;
