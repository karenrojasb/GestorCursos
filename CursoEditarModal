useEffect(() => {
  const fetchInscripciones = async () => {
    try {
      const idProfesor = localStorage.getItem("id_emp");
      if (!idProfesor) return;

      const response = await fetch(`http://localhost:8090/api/inscripciones/cursos/${idProfesor}`);
      const data: Inscripcion[] = await response.json();
      setInscripciones(data);
      setInscripcionesFiltradas(data);
    } catch (error) {
      console.error("Error al obtener inscripciones:", error);
    } finally {
      setIsLoading(false);
    }
  };

  const fetchOpciones = async () => {
    try {
      const respOpciones = await fetch("http://localhost:8090/api/listas/Especificaciones");
      if (!respOpciones.ok) throw new Error("Error al obtener lista de especificaciones");
      const dataOpciones = await respOpciones.json();
      setOpciones(dataOpciones);
    } catch (error) {
      console.error("Error al obtener opciones:", error);
    }
  };

  fetchInscripciones();
  fetchOpciones();
}, []);




<td className="px-4 py-2">
  <select
    className="border rounded px-2 py-1 text-sm bg-white"
    value={insc.Especificacion}
    disabled
  >
    {opciones.map((opcion) => (
      <option key={opcion.id} value={opcion.Especificacion}>
        {opcion.Especificacion}
      </option>
    ))}
  </select>
</td>
