import { Injectable } from "@nestjs/common";
import { PrismaService } from "src/prisma/prisma.service";

@Injectable()
export class UsuarioService {
  constructor(private prisma: PrismaService) {}

  async iniciarSesion(id_emp: string) {
    const usuario = await this.prisma.$queryRaw<any[]>`
      SELECT id_emp, nombre, publico, e_mail 
      FROM gescur.emp_nomina 
      WHERE id_emp = TRIM(${id_emp})`;

    if (usuario.length === 0) {
      return { mensaje: "Usuario no encontrado" };
    }

    // Verificar si el usuario es administrador
    const esAdmin = await this.prisma.$queryRaw<any[]>`
      SELECT 1 
      FROM gescur.rol_usuario 
      WHERE usuario = ${usuario[0].e_mail} 
      AND id_rol = 1`;

    return {
      ...usuario[0],
      isAdmin: esAdmin.length > 0, // Si est√° en la tabla, es admin
    };
  }
}



import { Controller, Post, Body } from "@nestjs/common";
import { UsuarioService } from "./usuario.service";

@Controller("usuario")
export class UsuarioController {
  constructor(private readonly usuarioService: UsuarioService) {}

  @Post("login")
  async login(@Body() body: { id_emp: string }) {
    return this.usuarioService.iniciarSesion(body.id_emp);
  }
}