<tbody>
  {Object.entries(groupedInscripciones).map(([cursoId, inscripciones]) => {
    const curso = inscripciones[0]; // Primer registro del curso para mostrar en la tabla
    return (
      <React.Fragment key={cursoId}>
        {/* FILA PRINCIPAL DEL CURSO */}
        <tr className="text-center hover:bg-gray-100 transition">
          <td className="border p-2">{cursoId}</td>
          <td className="border p-2">{curso.Cursos?.NombreCurso || curso.cursos?.NombreCurso || "Desconocido"}</td>
          <td className="border p-2">{new Date(curso.fecreg).toLocaleDateString()}</td>
          <td className="border p-2">
            <button
              onClick={() => toggleExpand(Number(cursoId))}
              className="text-blue-500 hover:text-blue-700"
            >
              {expandedCourses[Number(cursoId)] ? "Ver menos" : "Ver mÃ¡s"}
            </button>
          </td>
        </tr>

        {/* FILAS EXPANDIDAS CON INSCRITOS */}
        {expandedCourses[Number(cursoId)] && (
          <tr>
            <td colSpan={4}>
              <div className="p-2 bg-gray-50 border border-gray-300 rounded-md">
                <strong>Inscritos:</strong>
                <ul className="list-disc pl-5 mt-2">
                  {inscripciones.map((inscripcion) => (
                    <li key={inscripcion.id} className="py-1">
                      ðŸ“Œ <strong>Documento:</strong> {inscripcion.docInscr} | 
                      <strong> Estado:</strong> {inscripcion.est}
                    </li>
                  ))}
                </ul>
              </div>
            </td>
          </tr>
        )}
      </React.Fragment>
    );
  })}
</tbody>