"use client";
import { ReactNode, useState, useEffect } from "react";
import MainButtons from "./components/mainbuttons";
import { motion } from "framer-motion";

interface LayoutProps {
  children: ReactNode;
}

export default function RootLayout({ children }: LayoutProps) {
  const [usuario, setUsuario] = useState<string | null>(null);
  const [nombre, setNombre] = useState("");
  const [publico, setPublico] = useState(0); // Para verificar si es admin
  const [id, setId] = useState("");

  const iniciarSesion = async () => {
    if (id.trim() !== "") {
      try {
        const response = await fetch("http://localhost:8090/api/usuarios/login", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ id_emp: id }),
        });

        const data = await response.json();
        if (!response.ok) throw new Error(data.message || "Error en la autenticación");

        setUsuario(data.nom_emp);
        setNombre(data.nom_emp);
        setPublico(data.publico);
      } catch (error: any) {
        alert(error.message);
      }
    }
  };

  if (!usuario) {
    return (
      <html lang="es">
        <body className="flex items-center justify-center h-screen bg-gray-200">
          <div className="bg-white p-6 rounded-lg shadow-lg w-80 text-center">
            <h2 className="text-2xl font-bold mb-4 text-gray-800">Iniciar Sesión</h2>
            <input
              type="text"
              placeholder="Ingrese su ID"
              value={id}
              onChange={(e) => setId(e.target.value)}
              className="border p-2 w-full mb-3 rounded"
            />
            <button
              onClick={iniciarSesion}
              className="bg-[#990000] text-white px-4 py-2 rounded w-full hover:bg-red-700 transition"
            >
              Entrar
            </button>
          </div>
        </body>
      </html>
    );
  }

  return (
    <html lang="es">
      <body className="bg-gray-100">
        <header className="w-full flex items-center justify-between px-6 py-4 bg-white shadow-md">
          {/* LOGO */}
          <img
            src="/img/ecijg126.png"
            alt="Logo"
            className="h-20 transition-transform duration-300 ease-in-out hover:scale-110 active:scale-95"
          />

          {/* Usuario y botón de salida */}
          <div className="flex flex-col items-center ml-auto">
            <span className="text-xl text-gray-700 font-medium">{nombre}</span>
            <button
              className="flex items-center space-x-2 border border-red-600 px-3 py-2 rounded hover:bg-red-600 hover:text-white transition"
              onClick={() => setUsuario(null)}
            >
              Cerrar Sesión
            </button>
          </div>
        </header>

        {/* 📌 Contenedor principal centrado */}
        <div className="flex flex-col items-center justify-center min-h-screen p-6">
          {/* 📌 Mensaje de bienvenida bien centrado */}
          <h1 className="text-3xl font-bold text-[#990000] mb-6">
            {"Bienvenido a Gestión de Cursos".split("").map((letra, index) => (
              <motion.span
                key={index}
                initial={{ opacity: 0, y: -10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.05, delay: index * 0.05 }}
              >
                {letra === " " ? "\u00A0" : letra}
              </motion.span>
            ))}
          </h1>

          {/* 📌 Botones bien organizados y centrados */}
          <div className="flex flex-col items-center">
            <MainButtons onSelect={() => {}} esAdmin={publico === 1} />
          </div>

          {/* 📌 Contenido de las páginas */}
          <div className="mt-10">{children}</div>
        </div>
      </body>
    </html>
  );
}