import { useState } from "react";



export default function CursoModal({ onClose, onSave }) {

  const [formData, setFormData] = useState({

    NombreCurso: "",

    Valor: "",

    público: "",

    Periodo: "",

    Inicio: "",

    Fin: "",

    Horas: "",

  });



  // Manejar cambios en los inputs

  const handleChange = (e) => {

    setFormData({

      ...formData,

      [e.target.name]: e.target.value,

    });

  };



  // Manejar envío del formulario

  const handleSubmit = async (e) => {

    e.preventDefault(); // Evitar recarga de la página



    try {

      const response = await fetch("http://localhost:8090/api/cursos", {

        method: "POST",

        headers: {

          "Content-Type": "application/json",

        },

        body: JSON.stringify(formData),

      });



      if (response.ok) {

        const data = await response.json();

        console.log("Curso guardado:", data);

        onSave(data); // Actualizar lista de cursos en el frontend

        onClose(); // Cerrar modal después de guardar

      } else {

        console.error("Error al guardar el curso");

      }

    } catch (error) {

      console.error("Error en la solicitud:", error);

    }

  };



  return (

    <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">

      <div className="relative bg-white p-6 rounded-lg shadow-lg w-full max-w-3xl h-[700px] overflow-y-auto">

        <button className="absolute top-3 right-3 text-gray-500 hover:text-red-600 transition transform hover:scale-110" onClick={onClose}>

          ✖

        </button>

        <h2 className="text-xl font-bold mb-6 text-center text-[#990000]">Crear Curso</h2>

        <form onSubmit={handleSubmit}>

          <label className="block font-semibold">Nombre del Curso:</label>

          <input type="text" name="NombreCurso" value={formData.NombreCurso} onChange={handleChange} className="w-full border p-2 rounded mb-3" required />



          <label className="block font-semibold">Valor:</label>

          <input type="number" name="Valor" value={formData.Valor} onChange={handleChange} className="w-full border p-2 rounded mb-3" required />



          <label className="block font-semibold">Público:</label>

          <input type="text" name="público" value={formData.público} onChange={handleChange} className="w-full border p-2 rounded mb-3" />



          <label className="block font-semibold">Periodo:</label>

          <input type="text" name="Periodo" value={formData.Periodo} onChange={handleChange} className="w-full border p-2 rounded mb-3" />



          <label className="block font-semibold">Inicio:</label>

          <input type="date" name="Inicio" value={formData.Inicio} onChange={handleChange} className="w-full border p-2 rounded mb-3" />



          <label className="block font-semibold">Fin:</label>

          <input type="date" name="Fin" value={formData.Fin} onChange={handleChange} className="w-full border p-2 rounded mb-3" />



          <label className="block font-semibold">Horas:</label>

          <input type="number" name="Horas" value={formData.Horas} onChange={handleChange} className="w-full border p-2 rounded mb-3" />



          <button type="submit" className="mt-4 w-full bg-[#990000] text-white py-2 rounded-lg hover:scale-105 transition">

            Guardar Curso

          </button>

        </form>

      </div>

    </div>

  );

}