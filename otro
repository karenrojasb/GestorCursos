import { useState } from "react";
import { motion } from "framer-motion";
import { XMarkIcon } from "@heroicons/react/24/solid";

interface CursoModalProps {
  onClose: () => void;
  onSave: (data: any) => void;
}

export default function CursoModal({ onClose, onSave }: CursoModalProps) {
  const [formData, setFormData] = useState({
    id: 0,
    NombreCurso: "",
    Valor: 0,
    Publico: 0,
    Periodo: "",
    Inicio: "",
    Fin: "",
    Horas: 0,
    CupoMax: 0,
    Lugar: "",
    Horarios: {
      Lunes: { Inicio: "", Fin: "" },
      Martes: { Inicio: "", Fin: "" },
      Miercoles: { Inicio: "", Fin: "" },
      Jueves: { Inicio: "", Fin: "" },
      Viernes: { Inicio: "", Fin: "" },
      Sabado: { Inicio: "", Fin: "" },
      Domingo: { Inicio: "", Fin: "" },
    },
    Linea: 0,
    Estado: 0,
    Modalidad: 0,
    Unidad: 0,
    Profesor: 0,
    SegundoPro: "",
    Proexterno: 0,
    Descripcion: "",
    IdTipoCurso: 0,
  });

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value, type } = e.target;

    let newValue: any = value;
    if (type === "number") newValue = Number(value);
    if (type === "time" || type === "date") newValue = value;

    setFormData((prevData) => ({
      ...prevData,
      [name]: newValue,
    }));
  };

  const handleHorarioChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    const [dia, tipo] = name.split("_"); // Ejemplo: Lunes_Ini -> ["Lunes", "Ini"]

    setFormData((prevData) => ({
      ...prevData,
      Horarios: {
        ...prevData.Horarios,
        [dia]: {
          ...prevData.Horarios[dia],
          [tipo]: value,
        },
      },
    }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSave(formData);
  };

  return (
    <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
      <motion.div
        initial={{ opacity: 0, scale: 0.8 }}
        animate={{ opacity: 1, scale: 1 }}
        exit={{ opacity: 0, scale: 0.8 }}
        className="bg-white p-6 rounded-lg shadow-lg w-11/12 max-w-4xl relative"
      >
        {/* BOTÓN CERRAR */}
        <button
          onClick={onClose}
          className="absolute top-3 right-3 text-gray-500 hover:text-red-600 transition-transform duration-300 transform hover:rotate-90"
        >
          <XMarkIcon className="h-6 w-6" />
        </button>

        {/* TÍTULO */}
        <h2 className="text-2xl font-bold text-[#990000] mb-4 text-center">
          Crear Curso
        </h2>

        {/* FORMULARIO */}
        <form onSubmit={handleSubmit} className="grid grid-cols-2 gap-4">
          <input name="NombreCurso" placeholder="Nombre del Curso" onChange={handleChange} className="border p-2 rounded" />
          <input name="Valor" type="number" placeholder="Valor" onChange={handleChange} className="border p-2 rounded" />
          <input name="Publico" type="number" placeholder="Público" onChange={handleChange} className="border p-2 rounded" />
          <input name="Periodo" placeholder="Periodo" onChange={handleChange} className="border p-2 rounded" />
          <input name="Inicio" type="date" onChange={handleChange} className="border p-2 rounded" />
          <input name="Fin" type="date" onChange={handleChange} className="border p-2 rounded" />
          <input name="Horas" type="number" placeholder="Horas" onChange={handleChange} className="border p-2 rounded" />
          <input name="CupoMax" type="number" placeholder="Cupo Máximo" onChange={handleChange} className="border p-2 rounded" />
          <input name="Lugar" placeholder="Lugar" onChange={handleChange} className="border p-2 rounded" />

          {/* HORARIOS POR DÍA */}
          <div className="col-span-2 grid grid-cols-3 gap-4">
            {["Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Domingo"].map((dia) => (
              <div key={dia} className="flex flex-col">
                <label className="font-semibold">{dia}</label>
                <div className="flex gap-2">
                  <input name={`${dia}_Inicio`} type="time" onChange={handleHorarioChange} className="border p-2 rounded w-1/2" />
                  <input name={`${dia}_Fin`} type="time" onChange={handleHorarioChange} className="border p-2 rounded w-1/2" />
                </div>
              </div>
            ))}
          </div>

          {/* DATOS ADICIONALES */}
          <input name="Linea" type="number" placeholder="Línea" onChange={handleChange} className="border p-2 rounded" />
          <input name="Estado" type="number" placeholder="Estado" onChange={handleChange} className="border p-2 rounded" />
          <input name="Modalidad" type="number" placeholder="Modalidad" onChange={handleChange} className="border p-2 rounded" />
          <input name="Unidad" type="number" placeholder="Unidad" onChange={handleChange} className="border p-2 rounded" />
          <input name="Profesor" type="number" placeholder="Profesor" onChange={handleChange} className="border p-2 rounded" />
          <input name="SegundoPro" placeholder="Segundo Profesor" onChange={handleChange} className="border p-2 rounded" />
          <input name="Proexterno" type="number" placeholder="Profesor Externo" onChange={handleChange} className="border p-2 rounded" />
          <input name="IdTipoCurso" type="number" placeholder="ID Tipo Curso" onChange={handleChange} className="border p-2 rounded" />
          <textarea name="Descripcion" placeholder="Descripción" onChange={handleChange} className="border p-2 rounded col-span-2 h-20"></textarea>

          {/* BOTÓN GUARDAR */}
          <button
            type="submit"
            className="col-span-2 bg-[#990000] text-white py-2 rounded-lg shadow-md transition-all hover:shadow-lg"
          >
            Guardar Curso
          </button>
        </form>
      </motion.div>
    </div>
  );
}