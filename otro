"use client";
import { useState, useEffect } from "react";
import { Curso, createCurso, updateCurso } from "../services/cursosService";

interface CursoModalProps {
  curso?: Curso | null;
  onClose: () => void;
  onSave: () => void;
}

export default function CursoModal({ curso, onClose, onSave }: CursoModalProps) {
  const [formData, setFormData] = useState<Curso>({
    NombreCurso: "",
    Valor: 0,
    Publico: 0,
    Periodo: "",
    Inicio: "",
    Fin: "",
    Horas: 0,
    CupoMax: 0,
    Lugar: "",
    Modalidad: 0,
    Unidad: 0,
    Profesor: 0,
    Descripcion: "",
  });

  useEffect(() => {
    if (curso) {
      setFormData(curso);
    }
  }, [curso]);

  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      if (curso && curso.id) {
        await updateCurso(curso.id, formData);
      } else {
        await createCurso(formData);
      }
      onSave();
      onClose();
    } catch (error) {
      console.error("Error al guardar el curso:", error);
    }
  };

  return (
    <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50">
      <div className="bg-white p-6 rounded-lg shadow-lg w-96">
        <h2 className="text-xl font-bold text-[#990000] text-center mb-4">
          {curso ? "Editar Curso" : "Crear Curso"}
        </h2>

        <form onSubmit={handleSubmit} className="space-y-2">
          <input type="text" name="NombreCurso" placeholder="Nombre del Curso" value={formData.NombreCurso} onChange={handleChange} className="w-full p-2 border rounded" required />
          <input type="number" name="Valor" placeholder="Valor" value={formData.Valor} onChange={handleChange} className="w-full p-2 border rounded" required />
          <input type="text" name="Periodo" placeholder="Periodo" value={formData.Periodo} onChange={handleChange} className="w-full p-2 border rounded" required />
          <input type="date" name="Inicio" value={formData.Inicio} onChange={handleChange} className="w-full p-2 border rounded" required />
          <input type="date" name="Fin" value={formData.Fin} onChange={handleChange} className="w-full p-2 border rounded" required />
          <input type="text" name="Lugar" placeholder="Lugar" value={formData.Lugar} onChange={handleChange} className="w-full p-2 border rounded" required />

          <div className="flex justify-between">
            <button type="button" onClick={onClose} className="px-4 py-2 bg-gray-300 rounded">Cancelar</button>
            <button type="submit" className="px-4 py-2 bg-[#990000] text-white rounded">Guardar</button>
          </div>
        </form>
      </div>
    </div>
  );
}