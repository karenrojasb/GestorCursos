"use client";
import { useState } from "react";
import CatalogoModal from "./catalogomodal";
import { BookOpenIcon, DocumentCheckIcon, PencilIcon, XMarkIcon } from "@heroicons/react/24/solid";
import { ChartBarIcon, PencilSquareIcon } from "@heroicons/react/16/solid";
import { motion } from "framer-motion";
import CatalogoAdminModal from "./catalogoadminmodal";
import CursoModal from "./CursoModal";

interface MainButtonsProps {
  onSelect: (section: string) => void;
  esAdmin: boolean;
}

export default function MainButtons({ onSelect, esAdmin }: MainButtonsProps) {
  const [showCatalogo, setShowCatalogo] = useState(false);
  const [showGestorModal, setShowGestorModal] = useState(false);
  const [showCatalogoAdmin, setShowCatalogoAdmin] = useState(false);
  const [showCursoModal, setShowCursoModal] = useState(false);

  const handleSaveCurso = async (data: any) => {
    console.log("Enviando datos:", data);

    try {
      const response = await fetch("http://localhost:8090/api/cursos", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(data),
      });

      if (!response.ok) throw new Error("Error al guardar el curso");

      alert("Curso guardado con éxito");
      setShowCursoModal(false);
    } catch (error) {
      console.error("Error:", error);
      alert("Hubo un error al guardar el curso");
    }
  };

  return (
    <div className="flex flex-col items-center space-y-4 w-full max-w-md">
      {/* BOTÓN CATÁLOGO */}
      <button
        onClick={() => setShowCatalogo(true)}
        className="flex items-center justify-center gap-3 w-full bg-[#990000] 
        text-white py-3 rounded-lg shadow-md transition-all duration-300 hover:scale-105 hover:shadow-lg"
      >
        <BookOpenIcon className="h-6 w-6 text-white" />
        Catálogo
      </button>
      {showCatalogo && <CatalogoModal onClose={() => setShowCatalogo(false)} />}

      {/* BOTÓN DE CERTIFICADOS */}
      <button
        onClick={() => onSelect("/catalogomodal")}
        className="flex items-center justify-center gap-3 w-full bg-[#990000] 
        text-white py-3 rounded-lg shadow-md transition-all duration-300 hover:scale-105 hover:shadow-lg"
      >
        <DocumentCheckIcon className="h-6 w-6 text-white" />
        Certificados
      </button>

      {/* BOTONES SOLO PARA ADMINISTRADORES */}
      {esAdmin && (
        <>
          <button
            onClick={() => setShowGestorModal(true)}
            className="flex items-center justify-center gap-3 w-full bg-[#990000] 
            text-white py-3 rounded-lg shadow-md transition-all duration-300 hover:scale-105 hover:shadow-lg"
          >
            <PencilIcon className="h-6 w-6 text-white" />
            Gestor de Cursos
          </button>
          {showGestorModal && <CatalogoAdminModal onClose={() => setShowGestorModal(false)} />}
        </>
      )}
    </div>
  );
}
