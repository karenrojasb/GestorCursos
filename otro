async obtenerCursosParaUsuario(id_emp: string) {
    try {
        // OBTENER EL VALOR DE "PÚBLICO" DEL USUARIO
        const usuario = await this.prisma.$queryRaw<{ publico: number }[]>`
            SELECT publico FROM gescur.emp_nomina WHERE id_emp = ${id_emp}
        `;

        if (!usuario || usuario.length === 0) {
            throw new Error('Usuario no encontrado en gescur.emp_nomina');
        }

        const publico = usuario[0].publico;

        console.log(`Usuario ${id_emp} tiene publico: ${publico}`);

        let cursos;
        if (publico === 3) {
            // Consulta para traer todos los cursos
            cursos = await this.prisma.$queryRaw`
                SELECT 
                    c.id,
                    c.NombreCurso,
                    c.Valor,
                    lp.Especificacion AS Publico,
                    c.Periodo,
                    c.Inicio,
                    c.Fin,
                    c.Horas,
                    c.CupoMax,
                    c.Lugar,                          
                    c.Linea,
                    l.Especificacion AS Linea,    
                    c.Estado,
                    est.Especificacion AS Estado, 
                    c.Modalidad,
                    m.Especificacion AS Modalidad,
                    u.nombre AS Unidad, -- Obtener el nombre de la unidad
                    c.Profesor,
                    e.nombre AS NombreProfesor, -- Obtener el nombre del profesor
                    c.SegundoPro,
                    sp.nombre AS SegundoPro, -- Obtener el nombre del segundo profesor
                    c.Proexterno,
                    emp.nombre AS NombreEmpresario, -- Obtener el nombre del empresario
                    c.Descripcion
                FROM gescur.Cursos c
                LEFT JOIN gescur.listas lp ON lp.id = c.Publico AND lp.Tipo = 1
                LEFT JOIN gescur.listas l ON l.id = c.Linea AND l.Tipo = 2
                LEFT JOIN gescur.listas m ON m.id = c.Modalidad AND m.Tipo = 3
                LEFT JOIN gescur.listas est ON est.id = c.Estado AND est.Tipo = 4
                LEFT JOIN gescur.emp_nomina e ON c.Profesor = e.id_emp    
                LEFT JOIN gescur.emp_nomina sp ON CAST(c.SegundoPro AS VARCHAR) = sp.id_emp
                LEFT JOIN gescur.emp_nomina emp ON c.Proexterno = emp.id_emp -- Relacionar con la tabla emp_nomina para obtener el nombre del empresario
                LEFT JOIN gescur.unidad u ON c.Unidad = u.codigo
                ORDER BY c.id;
            `;
        } else {
            // Consulta para traer cursos solo del público específico
            cursos = await this.prisma.$queryRaw`
                SELECT 
                    c.id,
                    c.NombreCurso,
                    c.Valor,
                    lp.Especificacion AS Publico,
                    c.Periodo,
                    c.Inicio,
                    c.Fin,
                    c.Horas,
                    c.CupoMax,
                    c.Lugar,                          
                    c.Linea,
                    l.Especificacion AS Linea,    
                    c.Estado,
                    est.Especificacion AS Estado, 
                    c.Modalidad,
                    m.Especificacion AS Modalidad,
                    u.nombre AS Unidad, -- Obtener el nombre de la unidad
                    c.Profesor,
                    e.nombre AS NombreProfesor, -- Obtener el nombre del profesor
                    c.SegundoPro,
                    sp.nombre AS SegundoPro, -- Obtener el nombre del segundo profesor
                    c.Proexterno,
                    emp.nombre AS NombreEmpresario, -- Obtener el nombre del empresario
                    c.Descripcion
                FROM gescur.Cursos c
                LEFT JOIN gescur.listas lp ON lp.id = c.Publico AND lp.Tipo = 1
                LEFT JOIN gescur.listas l ON l.id = c.Linea AND l.Tipo = 2
                LEFT JOIN gescur.listas m ON m.id = c.Modalidad AND m.Tipo = 3
                LEFT JOIN gescur.listas est ON est.id = c.Estado AND est.Tipo = 4
                LEFT JOIN gescur.emp_nomina e ON c.Profesor = e.id_emp    
                LEFT JOIN gescur.emp_nomina sp ON CAST(c.SegundoPro AS VARCHAR) = sp.id_emp
                LEFT JOIN gescur.emp_nomina emp ON c.Proexterno = emp.id_emp -- Relacionar con la tabla emp_nomina para obtener el nombre del empresario
                LEFT JOIN gescur.unidad u ON c.Unidad = u.codigo
                WHERE c.Publico = ${publico} OR c.Publico = 3
                ORDER BY c.id;
            `;
        }

        console.log(`Cursos obtenidos para usuario ${id_emp}:`, cursos);
        return cursos;
    } catch (error) {
        console.error('Error al obtener cursos:', error.message);
        throw new Error('No se pudieron obtener los cursos.');
    }
}