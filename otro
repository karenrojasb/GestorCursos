import React, { useState } from "react";
import { XMarkIcon } from "@heroicons/react/24/solid";

interface CursoModalProps {
  onSave: (data: any) => void;
  onClose: () => void;
}

export default function CursoModal({ onClose, onSave }: CursoModalProps) {
  const [curso, setCurso] = useState({
    NombreCurso: "",
    Valor: 0,
    Publico: 0, // Se actualizará según el select
    Periodo: "",
    Inicio: "",
    Fin: "",
    Horas: 0,
    CupoMax: "",
    Lugar: "",
    Linea: "",
    Estado: "",
    Modalidad: "",
    Unidad: "",
    Profesor: "",
    SegundoPro: "",
    Proexterno: "",
    Descripcion: "",
    IdTipoCurso: "",
  });

  // Manejar cambios en los inputs
  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    setCurso({ ...curso, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSave({
      NombreCurso: curso.NombreCurso,
      Valor: Number(curso.Valor),
      Publico: Number(curso.Publico),
      Periodo: curso.Periodo,
      Inicio: curso.Inicio,
      Fin: curso.Fin,
      Horas: Number(curso.Horas) || 0,
      CupoMax: Number(curso.CupoMax),
      Lugar: curso.Lugar,
      Linea: Number(curso.Linea),
      Estado: Number(curso.Estado),
      Modalidad: Number(curso.Modalidad),
      Unidad: Number(curso.Unidad),
      Profesor: Number(curso.Profesor),
      SegundoPro: Number(curso.SegundoPro),
      Proexterno: curso.Proexterno,
      Descripcion: curso.Descripcion,
      IdTipoCurso: Number(curso.IdTipoCurso),
    });
  };

  return (
    <div className="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
      <div className="relative bg-white p-6 rounded-lg shadow-lg w-full max-w-3xl flex flex-col max-h-[80vh] overflow-y-auto">
        {/* Botón de cerrar */}
        <button
          className="absolute top-4 right-4 text-gray-500 hover:text-[#990000] transition-transform duration-300 hover:rotate-90"
          onClick={onClose}
        >
          <XMarkIcon className="w-6 h-6" />
        </button>

        <h2 className="text-xl font-bold mb-6 text-center text-[#990000]">Crear Curso</h2>

        {/* Formulario */}
        <form onSubmit={handleSubmit} className="space-y-4">
          <label className="block text-gray-700 font-medium">Nombre del curso: </label>
          <input
            type="text"
            name="NombreCurso"
            value={curso.NombreCurso}
            onChange={handleChange}
            className="w-full p-2 border-2 border-gray-700 rounded-lg focus:outline-none focus:border-[#990000] transition"
            required
          />

          <label className="block font-semibold">Valor: </label>
          <input
            type="number"
            name="Valor"
            value={curso.Valor}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />

          {/* Menú desplegable para Público */}
          <label className="block font-semibold">Público:</label>
          <select
            name="Publico"
            value={curso.Publico}
            onChange={handleChange}
            className="w-full p-2 border rounded bg-white"
            required
          >
            <option value={0}>Todos</option>
            <option value={1}>Profesores</option>
            <option value={2}>Finanzas</option>
          </select>

          <label className="block font-semibold">Periodo: </label>
          <input
            type="text"
            name="Periodo"
            value={curso.Periodo}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />

          <label className="block font-semibold">Inicio: </label>
          <input
            type="date"
            name="Inicio"
            value={curso.Inicio}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />

          <label className="block font-semibold">Fin: </label>
          <input
            type="date"
            name="Fin"
            value={curso.Fin}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />

          <label className="block font-semibold">Horas: </label>
          <input
            type="number"
            name="Horas"
            value={curso.Horas}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />

          <label className="block font-semibold">Cupo Máximo: </label>
          <input
            type="number"
            name="CupoMax"
            value={curso.CupoMax}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />

          <label className="block font-semibold">Lugar: </label>
          <input
            type="text"
            name="Lugar"
            value={curso.Lugar}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />

          <label className="block font-semibold">Descripción: </label>
          <input
            type="text"
            name="Descripcion"
            value={curso.Descripcion}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />

          <label className="block font-semibold">ID Tipo de Curso: </label>
          <input
            type="number"
            name="IdTipoCurso"
            value={curso.IdTipoCurso}
            onChange={handleChange}
            className="w-full p-2 border rounded"
            required
          />

          {/* BOTÓN PARA GUARDAR */}
          <button
            type="submit"
            className="mt-3 w-full bg-[#990000] text-white py-2 rounded-lg hover:scale-105 transition"
          >
            Guardar
          </button>

          <button
            onClick={onClose}
            className="mt-3 w-full bg-gray-500 text-white py-2 rounded-lg hover:scale-105 transition"
          >
            Cancelar
          </button>
        </form>
      </div>
    </div>
  );
}