import * as XLSX from 'xlsx';
import { saveAs } from 'file-saver';

const exportarCursoAExcel = (curso: Curso, inscripciones: Inscripcion[]) => {
  // Datos del curso
  const datosCurso = [
    {
      ID: curso.id,
      Nombre: curso.NombreCurso,
      Valor: curso.Valor,
      Público: curso.Publico,
      Periodo: curso.Periodo,
      Inicio: curso.Inicio,
      Fin: curso.Fin,
      Horas: curso.Horas,
      Lugar: curso.Lugar,
      Línea: curso.Linea,
      Estado: curso.Estado,
      Modalidad: curso.Modalidad,
      Profesor: curso.NombreProfesor,
      SegundoProfesor: curso.SegundoPro,
      ProfesorExterno: curso.Proexterno,
      Unidad: curso.Unidad,
      Descripción: curso.Descripcion,
    },
  ];

  // Datos de inscritos
  const datosInscritos = inscripciones.map(i => ({
    Documento: i.docInscr,
    Nombre: i.nombre,
    FechaRegistro: new Date(i.fecreg).toLocaleDateString(),
    Nota: '', // Puedes rellenarlo si tienes la nota
    Calificador: '',
    FechaCalificación: '',
  }));

  // Crear hojas de Excel
  const hojaCurso = XLSX.utils.json_to_sheet(datosCurso);
  const hojaInscritos = XLSX.utils.json_to_sheet(datosInscritos);

  const libro = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(libro, hojaCurso, "Curso");
  XLSX.utils.book_append_sheet(libro, hojaInscritos, "Inscritos");

  const excelBuffer = XLSX.write(libro, { bookType: "xlsx", type: "array" });
  const blob = new Blob([excelBuffer], { type: "application/octet-stream" });

  saveAs(blob, `Curso_${curso.NombreCurso}.xlsx`);
};



<button
  onClick={() => exportarCursoAExcel(curso, showInscripciones)}
  className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded transition-transform hover:scale-110 active:scale-95"
>
  Exportar
</button>