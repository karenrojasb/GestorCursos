import React, { useState } from "react";

interface CursoModalProps {
  onClose: () => void;
  onSave: () => void;
}

const CursoModal: React.FC<CursoModalProps> = ({ onClose, onSave }) => {
  const [formData, setFormData] = useState({
    NombreCurso: "",
    Valor: "",
    P√∫blico: "",
    Periodo: "",
    Inicio: "",
    Fin: "",
    Horas: "",
    CupoMax: "",
    Lugar: "",
    LunesIni: "",
    LunesFin: "",
    MartesIni: "",
    MartesFin: "",
    MiercolesIni: "",
    MiercolesFin: "",
    JuevesIni: "",
    JuevesFin: "",
    ViernesIni: "",
    ViernesFin: "",
    SabadoIni: "",
    SabadoFin: "",
    DomingoIni: "",
    DomingoFin: "",
    Linea: "",
    Estado: "",
    Modalidad: "",
    Unidad: "",
    Profesor: "",
    SegundoPto: "",
    Proexterno: "",
    Descripcion: "",
    IdTipoCurso: "",
  });

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    const cursoData = {
      NombreCurso: formData.NombreCurso,
      Valor: Number(formData.Valor),
      P√∫blico: Number(formData.P√∫blico),
      Periodo: formData.Periodo,
      Inicio: formData.Inicio,
      Fin: formData.Fin,
      Horas: Number(formData.Horas),
      CupoMax: Number(formData.CupoMax),
      Lugar: formData.Lugar,
      LunesIni: formData.LunesIni || null,
      LunesFin: formData.LunesFin || null,
      MartesIni: formData.MartesIni || null,
      MartesFin: formData.MartesFin || null,
      MiercolesIni: formData.MiercolesIni || null,
      MiercolesFin: formData.MiercolesFin || null,
      JuevesIni: formData.JuevesIni || null,
      JuevesFin: formData.JuevesFin || null,
      ViernesIni: formData.ViernesIni || null,
      ViernesFin: formData.ViernesFin || null,
      SabadoIni: formData.SabadoIni || null,
      SabadoFin: formData.SabadoFin || null,
      DomingoIni: formData.DomingoIni || null,
      DomingoFin: formData.DomingoFin || null,
      Linea: Number(formData.Linea),
      Estado: Number(formData.Estado),
      Modalidad: Number(formData.Modalidad),
      Unidad: Number(formData.Unidad),
      Profesor: Number(formData.Profesor),
      SegundoPto: Number(formData.SegundoPto),
      Proexterno: formData.Proexterno,
      Descripcion: formData.Descripcion,
      IdTipoCurso: Number(formData.IdTipoCurso),
    };

    console.log("üöÄ Enviando datos:", JSON.stringify(cursoData));

    try {
      const response = await fetch("http://localhost:8090/api/cursos", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(cursoData),
      });

      console.log("‚úÖ Estado de respuesta:", response.status);

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(JSON.stringify(errorData));
      }

      const responseData = await response.json();
      console.log("‚úÖ Curso guardado con √©xito:", responseData);
      onSave();
      onClose();
    } catch (error) {
      console.error("‚ùå Error al guardar el curso:", error);
    }
  };

  return (
    <div className="modal">
      <div className="modal-content">
        <h2>Crear Curso</h2>
        <form onSubmit={handleSubmit}>
          <input type="text" name="NombreCurso" placeholder="Nombre del curso" onChange={handleChange} required />
          <input type="number" name="Valor" placeholder="Valor" onChange={handleChange} required />
          <input type="number" name="P√∫blico" placeholder="P√∫blico" onChange={handleChange} required />
          <input type="text" name="Periodo" placeholder="Periodo" onChange={handleChange} required />
          <input type="text" name="Inicio" placeholder="Inicio" onChange={handleChange} required />
          <input type="text" name="Fin" placeholder="Fin" onChange={handleChange} required />
          <input type="number" name="Horas" placeholder="Horas" onChange={handleChange} required />
          <input type="number" name="CupoMax" placeholder="Cupo M√°ximo" onChange={handleChange} required />
          <input type="text" name="Lugar" placeholder="Lugar" onChange={handleChange} required />
          <input type="number" name="Linea" placeholder="L√≠nea" onChange={handleChange} required />
          <input type="number" name="Estado" placeholder="Estado" onChange={handleChange} required />
          <input type="number" name="Modalidad" placeholder="Modalidad" onChange={handleChange} required />
          <input type="number" name="Unidad" placeholder="Unidad" onChange={handleChange} required />
          <input type="number" name="Profesor" placeholder="Profesor" onChange={handleChange} required />
          <input type="number" name="SegundoPto" placeholder="Segundo Pto" onChange={handleChange} required />
          <input type="text" name="Proexterno" placeholder="Proexterno" onChange={handleChange} required />
          <input type="text" name="Descripcion" placeholder="Descripci√≥n" onChange={handleChange} required />
          <input type="number" name="IdTipoCurso" placeholder="Tipo de Curso" onChange={handleChange} required />

          <button type="submit">Guardar</button>
          <button type="button" onClick={onClose}>Cancelar</button>
        </form>
      </div>
    </div>
  );
};

export default CursoModal;