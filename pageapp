async obtenerPorIdInscrito(idInscrito: number) {
  const notas = await this.prisma.notas.findMany({
    where: { idInscrito },
    include: {
      Listas: {
        select: {
          Especificacion: true,
        },
      },
    },
  });

  const notasConCurso = await Promise.all(
    notas.map(async (nota) => {
      if (!nota.idCurso) {
        return {
          ...nota,
          NombreCurso: null,
          Lugar: null,
          Inicio: null,
          Fin: null,
          LunesIni: null,
          LunesFin: null,
          MartesIni: null,
          MartesFin: null,
          MiercolesIni: null,
          MiercolesFin: null,
          JuevesIni: null,
          JuevesFin: null,
          ViernesIni: null,
          ViernesFin: null,
          SabadoIni: null,
          SabadoFin: null,
          Profesor: null,
          NombreProfesor: null,
          ProExterno: null,
          SegundoPro: null,
          NombreSegundoPro: null,
        };
      }

      const curso = await this.prisma.cursos.findFirst({
        where: {
          id: nota.idCurso,
        },
        select: {
          NombreCurso: true,
          Lugar: true,
          Inicio: true,
          Fin: true,
          LunesIni: true,
          LunesFin: true,
          MartesIni: true,
          MartesFin: true,
          MiercolesIni: true,
          MiercolesFin: true,
          JuevesIni: true,
          JuevesFin: true,
          ViernesIni: true,
          ViernesFin: true,
          SabadoIni: true,
          SabadoFin: true,
          Profesor: true,
          ProExterno: true,
          SegundoPro: true,
        },
      });

      let nombreProfesor: string | null = null;
      if (curso?.Profesor) {
        const profesor = await this.prisma.emp_nomina.findFirst({
          where: {
            id_emp: curso.Profesor,
          },
          select: {
            nombre: true,
          },
        });
        nombreProfesor = profesor?.nombre || null;
      }

      let nombreSegundoPro: string | null = null;
      if (curso?.SegundoPro) {
        const segundoPro = await this.prisma.emp_nomina.findFirst({
          where: {
            id_emp: curso.SegundoPro,
          },
          select: {
            nombre: true,
          },
        });
        nombreSegundoPro = segundoPro?.nombre || null;
      }

      return {
        ...nota,
        NombreCurso: curso?.NombreCurso || null,
        Lugar: curso?.Lugar || null,
        Inicio: curso?.Inicio || null,
        Fin: curso?.Fin || null,
        LunesIni: curso?.LunesIni || null,
        LunesFin: curso?.LunesFin || null,
        MartesIni: curso?.MartesIni || null,
        MartesFin: curso?.MartesFin || null,
        MiercolesIni: curso?.MiercolesIni || null,
        MiercolesFin: curso?.MiercolesFin || null,
        JuevesIni: curso?.JuevesIni || null,
        JuevesFin: curso?.JuevesFin || null,
        ViernesIni: curso?.ViernesIni || null,
        ViernesFin: curso?.ViernesFin || null,
        SabadoIni: curso?.SabadoIni || null,
        SabadoFin: curso?.SabadoFin || null,
        Profesor: curso?.Profesor || null,
        NombreProfesor: nombreProfesor,
        ProExterno: curso?.ProExterno || null,
        SegundoPro: curso?.SegundoPro || null,
        NombreSegundoPro: nombreSegundoPro,
      };
    })
  );

  return notasConCurso;
}