import React, { useEffect, useState } from 'react';

interface Curso {
  id: number;
  nombre: string;
  descripcion: string;
  Profesor: number | null;
}

interface Profesor {
  id_emp: number;
  nombre: string;
}

interface Props {
  curso: Curso;
  onClose: () => void;
  onSave: () => void;
}

const CursoEditarModal: React.FC<Props> = ({ curso, onClose, onSave }) => {
  const [nombre, setNombre] = useState(curso?.nombre || '');
  const [descripcion, setDescripcion] = useState(curso?.descripcion || '');
  const [profesorSeleccionado, setProfesorSeleccionado] = useState<number | null>(curso?.Profesor ?? null);
  const [profesores, setProfesores] = useState<Profesor[]>([]);

  useEffect(() => {
    const obtenerProfesores = async () => {
      try {
        const response = await fetch('http://localhost/api/cursos/profe');
        const data = await response.json();
        setProfesores(data);
      } catch (error) {
        console.error('Error al obtener profesores:', error);
      }
    };

    obtenerProfesores();
  }, []);

  const handleGuardar = async () => {
    const dataToSend = {
      nombre,
      descripcion,
      Profesor: profesorSeleccionado,
    };

    try {
      const response = await fetch(`http://localhost/api/cursos/${curso.id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(dataToSend),
      });

      if (!response.ok) {
        throw new Error('No se pudo actualizar el curso');
      }

      onSave();
      onClose();
    } catch (error) {
      console.error('Error al guardar:', error);
    }
  };

  return (
    <div className="modal">
      <h2>Editar Curso</h2>
      <label>Nombre:</label>
      <input value={nombre} onChange={(e) => setNombre(e.target.value)} />

      <label>Descripci√≥n:</label>
      <input value={descripcion} onChange={(e) => setDescripcion(e.target.value)} />

      <label>Profesor:</label>
      <select
        value={profesorSeleccionado ?? ''}
        onChange={(e) => setProfesorSeleccionado(Number(e.target.value))}
      >
        <option value="">Seleccione un profesor</option>
        {profesores.map((prof) => (
          <option key={prof.id_emp} value={prof.id_emp}>
            {prof.nombre}
          </option>
        ))}
      </select>

      <div className="modal-actions">
        <button onClick={handleGuardar}>Guardar</button>
        <button onClick={onClose}>Cancelar</button>
      </div>
    </div>
  );
};

export default CursoEditarModal;